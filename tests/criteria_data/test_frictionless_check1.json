{
  "type": "array",
  "items": {
    "type": "object",
    "required": [
      "module",
      "name",
      "title",
      "description",
      "type",
      "format",
      "constraints.maxLength",
      "constraints.enum",
      "constraints.pattern",
      "constraints.maximum",
      "constraints.minimum",
      "encodings",
      "ordered",
      "missingValues",
      "trueValues",
      "falseValues",
      "repo_link",
      "standardsMappings.type",
      "standardsMappings.label",
      "standardsMappings.url",
      "standardsMappings.source",
      "standardsMappings.id",
      "relatedConcepts.type",
      "relatedConcepts.label",
      "relatedConcepts.url",
      "relatedConcepts.source",
      "relatedConcepts.id",
      "univarStats.median",
      "univarStats.mean",
      "univarStats.std",
      "univarStats.min",
      "univarStats.max",
      "univarStats.mode",
      "univarStats.count",
      "univarStats.twentyFifthPercentile",
      "univarStats.seventyFifthPercentile",
      "univarStats.categoricalMarginals.name",
      "univarStats.categoricalMarginals.count"
    ],
    "properties": {
      "module": {
        "anyOf": [
          {
            "description": "The section, form, survey instrument, set of measures  or other broad category used \nto group variables.\n",
            "title": "Module",
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "name": {
        "description": "The name of a variable (i.e., field) as it appears in the data. \n\n[Required]\n",
        "title": "Variable Name",
        "type": "string"
      },
      "title": {
        "anyOf": [
          {
            "description": "The human-readable title or label of the variable. \n\n[Highly recommended]\n",
            "title": "Variable Label (ie Title)",
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "description": {
        "description": "An extended description of the variable. This could be the definition of a variable or the \nquestion text (e.g., if a survey). \n\n[Required]\n",
        "title": "Variable Description",
        "type": "string"
      },
      "type": {
        "anyOf": [
          {
            "description": "A classification or category of a particular data element or property expected or allowed in the dataset.\n\n-  `number` (A numeric value with optional decimal places. (e.g., 3.14))\n-  `integer` (A whole number without decimal places. (e.g., 42))\n-  `string` (A sequence of characters. (e.g., \\\"test\\\"))\n-  `any` (Any type of data is allowed. (e.g., true))\n-  `boolean` (A binary value representing true or false. (e.g., true))\n-  `date` (A specific calendar date. (e.g., \\\"2023-05-25\\\"))\n-  `datetime` (A specific date and time, including timezone information. (e.g., \\\"2023-05-25T10:30:00Z\\\"))\n-  `time` (A specific time of day. (e.g., \\\"10:30:00\\\"))\n-  `year` (A specific year. (e.g., 2023)\n-  `yearmonth` (A specific year and month. (e.g., \\\"2023-05\\\"))\n-  `duration` (A length of time. (e.g., \\\"PT1H\\\")\n-  `geopoint` (A pair of latitude and longitude coordinates. (e.g., [51.5074, -0.1278]))\n",
            "title": "Variable Type",
            "type": "string",
            "enum": [
              "integer",
              "geopoint",
              "string",
              "yearmonth",
              "number",
              "date",
              "boolean",
              "any",
              "year",
              "duration",
              "time",
              "datetime"
            ]
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "format": {
        "anyOf": [
          {
            "description": "A format taken from one of the [frictionless specification](https://specs.frictionlessdata.io/) schemas.\nFor example, for tabular data, there is the [Table Schema specification](https://specs.frictionlessdata.io/table-schema)\n\nEach format is dependent on the `type` specified. For example:\nIf `type` is \"string\", then see the String formats. \nIf `type` is one of the date-like formats, then see Date formats.\n",
            "title": "Frictionless Formats"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "constraints.maxLength": {
        "anyOf": [
          {
            "description": "Indicates the maximum length of an iterable (e.g., array, string, or\nobject). For example, if 'Hello World' is the longest value of a\ncategorical variable, this would be a maxLength of 11.\n\n[Optional,if applicable]\n",
            "title": "Maximum Length",
            "type": "integer"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "constraints.enum": {
        "anyOf": [
          {
            "description": "Constrains possible values to a set of values.\n\n[Optional,if applicable]\n",
            "title": "Variable Possible Values",
            "type": "string",
            "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "constraints.pattern": {
        "anyOf": [
          {
            "description": "A regular expression pattern the data MUST conform to.\n\n[Optional,if applicable]\n",
            "title": "Regular Expression Pattern",
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "constraints.maximum": {
        "anyOf": [
          {
            "description": "Specifies the maximum value of a field (e.g., maximum -- or most\nrecent -- date, maximum integer etc). Note, this is different then\nmaxLength property.\n\n[Optional,if applicable]\n",
            "title": "Maximum Value",
            "type": "integer"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "constraints.minimum": {
        "anyOf": [
          {
            "description": "Specifies the minimum value of a field.\n\n[Optional,if applicable]\n",
            "title": "Minimum Value",
            "type": "integer"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "encodings": {
        "anyOf": [
          {
            "description": "Variable value encodings provide a way to further annotate any value within a any variable type,\nmaking values easier to understand. \n\n\nMany analytic software programs (e.g., SPSS,Stata, and SAS) use numerical encodings and some algorithms\nonly support numerical values. Encodings (and mappings) allow categorical values to be stored as\nnumerical values.\n\nAdditionally, as another use case, this field provides a way to\nstore categoricals that are stored as  \"short\" labels (such as\nabbreviations).\n\n[Optional,if applicable]\n",
            "title": "Variable Value Encodings (i.e., mappings; value labels)",
            "type": "string",
            "pattern": "^(?:.*?=.*?(?:\\||$))+$"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "ordered": {
        "anyOf": [
          {
            "description": "Indicates whether a categorical variable is ordered. This variable  is\nrelevant for variables that have an ordered relationship but not\nnecessarily  a numerical relationship (e.g., Strongly disagree < Disagree\n< Neutral < Agree).\n\n[Optional,if applicable]\n",
            "title": "An ordered variable",
            "type": "boolean"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "missingValues": {
        "anyOf": [
          {
            "description": "A list of missing values specific to a variable.\n\n[Optional, if applicable]\n",
            "title": "Missing Values",
            "type": "string",
            "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "trueValues": {
        "anyOf": [
          {
            "description": "For boolean (true) variable (as defined in type field), this field allows\na physical string representation to be cast as true (increasing\nreadability of the field). It can include one or more values.\n\n[Optional, if applicable]\n",
            "type": "string",
            "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "falseValues": {
        "anyOf": [
          {
            "description": "For boolean (false) variable (as defined in type field), this field allows\na physical string representation to be cast as false (increasing\nreadability of the field) that is not a standard false value. It can include one or more values.\n",
            "title": "Boolean False Value Labels",
            "type": "string",
            "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "repo_link": {
        "anyOf": [
          {
            "description": "A link to the variable as it exists on the home repository, if applicable\n",
            "title": "Variable Repository Link",
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "standardsMappings.type": {
        "anyOf": [
          {
            "description": "The **type** of mapping linked to a published set of standard variables such as the NIH Common Data Elements program.\n[Autopopulated, if not filled]\n",
            "title": "Standards Mapping - Title",
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "standardsMappings.label": {
        "anyOf": [
          {
            "description": "A free text **label** of a mapping indicating a mapping(s) to a published set of standard variables such as the NIH Common Data Elements program.\n\n[Autopopulated, if not filled]\n",
            "title": "Standards Mapping - Label",
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "standardsMappings.url": {
        "anyOf": [
          {
            "description": "The url that links out to the published, standardized mapping.\n\n[Autopopulated, if not filled]\n",
            "title": "Standards Mapping - Url",
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "standardsMappings.source": {
        "anyOf": [
          {
            "description": "The source of the standardized variable.\n",
            "title": "Standard Mapping - Source",
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "standardsMappings.id": {
        "anyOf": [
          {
            "description": "The id locating the individual mapping within the given source.\n",
            "title": "Standard Mapping - Id",
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "relatedConcepts.type": {
        "anyOf": [
          {
            "description": "The **type** of mapping to a published set of concepts related to the given field such as \nontological information (eg., NCI thesaurus, bioportal etc)\n\n[Autopopulated, if not filled]\n",
            "title": "Related concepts - Type",
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "relatedConcepts.label": {
        "anyOf": [
          {
            "description": "A free text **label** of mapping to a published set of concepts related to the given field such as \nontological information (eg., NCI thesaurus, bioportal etc)\n\n[Autopopulated, if not filled]\n",
            "title": "Related Concepts - Label",
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "relatedConcepts.url": {
        "anyOf": [
          {
            "description": "The url that links out to the published, standardized concept.\n\n[Autopopulated, if not filled]\n",
            "title": "Related Concepts - Url",
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "relatedConcepts.source": {
        "anyOf": [
          {
            "description": "The source of the related concept.\n\n[Autopopulated, if not filled]\n",
            "title": "Related Concepts - Source",
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "relatedConcepts.id": {
        "anyOf": [
          {
            "description": "The id locating the individual mapping within the given source.\n\n[Autopopulated, if not filled]\n",
            "title": "Related Concepts - Id",
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "univarStats.median": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "univarStats.mean": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "univarStats.std": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "univarStats.min": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "univarStats.max": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "univarStats.mode": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "univarStats.count": {
        "anyOf": [
          {
            "type": "integer"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "univarStats.twentyFifthPercentile": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "univarStats.seventyFifthPercentile": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "univarStats.categoricalMarginals.name": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      },
      "univarStats.categoricalMarginals.count": {
        "anyOf": [
          {
            "type": "integer"
          },
          {
            "enum": [
              ""
            ]
          }
        ]
      }
    },
    "description": "Variable level metadata individual fields integrated into the variable level\nmetadata object within the HEAL platform metadata service.\n\n> Note, only `name` and `description` are required.\n>  Listed at the end of the description are suggested \"priority\" levels in brackets (e.g., [<priority>]):\n  1. [Required]: Needs to be filled out to be valid.\n  2. [Highly recommended]: Greatly help using the data dictionary but not required. \n  3. [Optional, if applicable]: May only be applicable to certain fields.\n  4. [Autopopulated, if not filled]: These fields are intended to be autopopulated from other fields but can be filled out if desired.\n  5. [Experimental]: These fields are not currently used but are in development.\n",
    "title": "HEAL Variable Level Metadata Fields"
  }
}